# .github/workflows/download_and_upload.yml

name: Download and Upload YouTube Channel (Pre-compiled)

on:
  workflow_dispatch:
    inputs:
      channel_handle:
        description: 'The handle of the YouTube channel (e.g., udayagammanpila6380)'
        required: true
        default: 'udayagammanpila6380'

jobs:
  build-and-upload:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository and executable
        uses: actions/checkout@v4

      - name: Install yt-dlp using pipx
        run: pip install yt-dlp

      - name: Download and Organize Channel Content
        id: download
        env:
          YOUTUBE_COOKIES: ${{ secrets.YOUTUBE_COOKIES }}
        run: |
          # PowerShell variable setup
          $CHANNEL_HANDLE = "${{ github.event.inputs.channel_handle }}"
          $TIMESTAMP = (Get-Date -Format 'yyyyMMdd-HHmmss')
          $ROOT_FOLDER = "${CHANNEL_HANDLE}-${TIMESTAMP}"

          # 2. Write the secure cookie content to a temporary file
          # We use $env:YOUTUBE_COOKIES to access the secret environment variable.
          echo $env:YOUTUBE_COOKIES | Out-File -FilePath 'cookies.txt' -Encoding ascii
          $COOKIE_ARG = "--cookies cookies.txt" # Set the argument for yt-dlp

          echo "Creating root download folder: $ROOT_FOLDER"
          mkdir "$ROOT_FOLDER\videos"
          mkdir "$ROOT_FOLDER\shorts"

          # 3. Download all regular videos (using the cookie file)
          echo "--- Starting to download videos ---"
          $VIDEOS_URL = "https://www.youtube.com/@$CHANNEL_HANDLE/videos"
          cd "$ROOT_FOLDER\videos"
          # Inject $COOKIE_ARG into the yt-dlp command
          yt-dlp $COOKIE_ARG --ignore-errors -o "%(playlist_index)s - %(title)s.%(ext)s" "$VIDEOS_URL"
          cd ..\..
          echo "--- Finished downloading videos ---"
          
          # 4. Download all shorts (using the cookie file)
          echo "--- Starting to download shorts ---"
          $SHORTS_URL = "https://www.youtube.com/@$CHANNEL_HANDLE/shorts"
          cd "$ROOT_FOLDER\shorts"
          # Inject $COOKIE_ARG into the yt-dlp command
          yt-dlp $COOKIE_ARG --ignore-errors -o "%(playlist_index)s - %(title)s.%(ext)s" "$SHORTS_URL"
          cd ..\..
          echo "--- Finished downloading shorts ---"

          echo "All content downloaded into '$ROOT_FOLDER'"
          echo "dirpath=$ROOT_FOLDER" >> $env:GITHUB_OUTPUT
          echo "remote_folder=$ROOT_FOLDER" >> $env:GITHUB_OUTPUT

      - name: Run Pre-compiled Uploader
        env:
          GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
          GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}
          GDRIVE_REFRESH_TOKEN: ${{ secrets.GDRIVE_REFRESH_TOKEN }}
        run: |
          # PowerShell variable access for outputs: $env:VAR
          $LOCAL_DIR = "${{ steps.download.outputs.dirpath }}"
          $REMOTE_FOLDER = "${{ steps.download.outputs.remote_folder }}"

          echo "Uploading directory '$LOCAL_DIR' to Google Drive folder '$REMOTE_FOLDER'..."
          
          # Execute the pre-compiled application (PowerShell execution syntax)
          .\yt2drive.exe "$LOCAL_DIR" "$REMOTE_FOLDER"
